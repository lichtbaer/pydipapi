[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pydipapi"
version = "0.0.2"
description = "Python client for the German Bundestag API"
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "requests",
    "pydantic",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "bandit",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
]

[tool.ruff]
target-version = "py37"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # exception chaining
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py", "*/tests/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 